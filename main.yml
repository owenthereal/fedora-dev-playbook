- hosts: localhost
  tasks:
    # dnf packages start
    - name: Add extra dnf repos
      become: true
      command:
        cmd: 'dnf config-manager --add-repo {{ item }}'
        warn: false
      loop:
        - https://cli.github.com/packages/rpm/gh-cli.repo
        # Rootful Docker starts
        - https://download.docker.com/linux/fedora/docker-ce.repo
        # Rootful Docker ends
    - name: Install packages
      become: true
      package:
        name:
          - bat
          - curl
          - direnv
          - fzf
          - gh
          - git
          - gnome-tweak-tool
          - go
          - hub
          - jq
          - kubernetes-client
          - make
          - neovim
          - openssh
          - postgresql
          - ruby
          - tmux
          - util-linux-user
          - vim
          - vim-X11
          - "@virtualization"
          - xclip
          - zsh
          - zsh-syntax-highlighting
          - zsh-autosuggestions
          # Rootful Docker starts
          - docker-ce
          - docker-ce-cli
          - containerd.io
          # Rootful Docker ends
          - docker-compose
    # dnf packages end

    - name: Change Shell to Zsh
      become: true
      command: chsh -s /usr/bin/zsh

    - name: Remove oh-my-zsh
      file:
        path: ~/.oh-my-zsh
        state: absent
    - include_tasks: install_script.yml
      with_items:
        - name: oh-my-zsh
          url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        - name: space-vim
          url: https://raw.githubusercontent.com/liuchengxu/space-vim/master/install.sh
          args: --all
        - name: goup
          url: https://raw.githubusercontent.com/jingweno/goup/master/install.sh
          args: --skip-prompt
        # - name: docker
          # url: https://get.docker.com/rootless
        - name: helm
          url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          envs:
              HELM_INSTALL_DIR: "{{ lookup('env', 'HOME') }}/bin"
              USE_SUDO: false
            #- name: nodenv
            #url: https://raw.githubusercontent.com/nodenv/nodenv-installer/master/bin/nodenv-installer

    # kubectl version
    - name: fetch_kubectl_version
      command: "curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt"
      register: get_kubectl_version
    - set_fact:
        kubectl_version={{ get_kubectl_version.stdout }}
    # kubectl version

    - include_tasks: install_bin.yml
      with_items:
        - name: kubectl
          url: "https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version }}/bin/linux/amd64/kubectl"
        - name: minikube
          url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64

    - name: fetch_terraform_version
      shell: "curl -s https://api.github.com/repos/hashicorp/terraform/releases/latest  | jq -r '.tag_name' | tr -d v"
      register: get_terraform_version
    - set_fact:
        terraform_version={{ get_terraform_version.stdout }}

    - include_tasks: install_archive.yml
      with_items:
        - url: "https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip"
          bin_in_tar: terraform
          name: terraform
        - url: https://github.com/kubernetes-sigs/krew/releases/latest/download/krew-linux_amd64.tar.gz
          bin_in_tar: krew-linux_amd64
          name: krew

    # Dotfiles starts
    - name: Download Dotfiles
      git:
        repo: git@github.com:jingweno/dotfiles.git
        dest: ~/.dotfiles
    - name: Link Dotfiles
      file:
        src: '~/.dotfiles/{{ item }}'
        dest: '~/{{ item }}'
        state: link
        force: true
      loop:
        - .gemrc
        - .gitignore
        - .gitconfig
        - .irbrc
        - .spacevim
        - .tmux.conf
        - .zshrc
        - .zshrc.linux
    # Dotfiles ends

    # Rootless Docker starts
    # Ref: https://docs.docker.com/engine/security/rootless
    # - name: Enable Docker
      # command: systemctl --user enable docker
    # - name: Start Docker
      # command: systemctl --user start docker
    # - name: Drop to cgroup1 for Docker
      # become: true
      # command: grubby --update-kernel=ALL --args="systemd.unified_cgroup_hierarchy=0"
    # - name: Fix Docker Network
      # become: true
      # command: firewall-cmd --permanent --zone trusted --add-interface docker0
    # Rootless Docker ends

    # kvm starts
    - name: Add User To libvirt Group
      become: true
      command: usermod -aG libvirt $USER
    # kvm ends

    # Rootful Docker starts
    # Ref: https://fedoramagazine.org/docker-and-fedora-32
    - name: Start Docker
      become: true
      command: systemctl enable docker
    - name: Add User To Docker Group
      become: true
      command: usermod -aG docker $USER
    - name: Fix Docker Network
      become: true
      command: firewall-cmd --permanent --zone trusted --add-interface docker0
    # Rootful Docker ends

    - name: Enable Night Light
      dconf:
        key: /org/gnome/settings-daemon/plugins/color/night-light-enabled
        value: "true"

    # Flathub starts
    - name: Enable Flathub repository
      command: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
    - name: Install Flathub Packages
      command: flatpak install --assumeyes flathub {{ item }}
      loop:
        - com.discordapp.Discord
        - com.dropbox.Client
        - com.slack.Slack
        - com.spotify.Client
        - com.visualstudio.code
        - org.gimp.GIMP
        - org.gnome.Extensions
        - com.google.Chrome
        # - us.zoom.Zoom follow https://support.zoom.us/hc/en-us/articles/204206269-Installing-or-updating-Zoom-on-Linux#h_825b50ac-ad15-44a8-9959-28c97e4803ef
    # Flathub ends
